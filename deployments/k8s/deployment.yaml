apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextevent-api
  namespace: nextevent
  labels:
    app.kubernetes.io/name: nextevent-api
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: nextevent-platform
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: nextevent-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nextevent-api
        app.kubernetes.io/version: "2.0.0"
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nextevent-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: nextevent-api
        image: nextevent/api:2.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: LOG_LEVEL
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: SERVER_PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: DB_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: nextevent-config
              key: REDIS_PORT
        # Secrets
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: nextevent-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextevent-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: nextevent-secrets
              key: JWT_SECRET
        - name: API_KEY_ADMIN
          valueFrom:
            secretKeyRef:
              name: nextevent-secrets
              key: API_KEY_ADMIN
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /app/temp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: nextevent-uploads-pvc
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - nextevent-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nextevent-api
  namespace: nextevent
  labels:
    app.kubernetes.io/name: nextevent-api
    app.kubernetes.io/component: api

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextevent-uploads-pvc
  namespace: nextevent
  labels:
    app.kubernetes.io/name: nextevent-api
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
